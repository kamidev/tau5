import Config

# For development, we disable any cache and enable
# debugging and code reloading.
#
# The watchers configuration can be used to run external
# watchers to your application. For example, we can use it
# to bundle .js and .css sources.
# Internal endpoint always uses random port for security
# GUI will pass the allocated port via PORT env var
port = String.to_integer(System.get_env("PORT") || "0")

config :tau5, Tau5Web.Endpoint,
  # Internal endpoint - localhost only with app token required
  http: [ip: {127, 0, 0, 1}, port: port],
  check_origin: false,
  code_reloader: true,
  debug_errors: true,
  secret_key_base: "IDBN11XH469A36AVPcMyB5QCZw3gjoymTQu6PXY32kt5Ocb7zD0aBm09V9/uzF8v",
  watchers: [
    esbuild: {Esbuild, :install_and_run, [:default, ~w(--sourcemap=inline --watch)]},
    tailwind: {Tailwind, :install_and_run, [:default, ~w(--watch)]},
    tailwind_console: {Tailwind, :install_and_run, [:console, ~w(--watch)]}
  ]

# ## SSL Support
#
# In order to use HTTPS in development, a self-signed
# certificate can be generated by running the following
# Mix task:
#
#     mix phx.gen.cert
#
# Run `mix help phx.gen.cert` for more information.
#
# The `http:` config above can be replaced with:
#
#     https: [
#       port: 4001,
#       cipher_suite: :strong,
#       keyfile: "priv/cert/selfsigned_key.pem",
#       certfile: "priv/cert/selfsigned.pem"
#     ],
#
# If desired, both `http:` and `https:` keys can be
# configured to run both http and https servers on
# different ports.

# Watch static and templates for browser reloading.
config :tau5, Tau5Web.Endpoint,
  live_reload: [
    patterns: [
      ~r"priv/static/(?!uploads/).*(js|css|png|jpeg|jpg|gif|svg)$",
      ~r"priv/gettext/.*(po)$",
      ~r"lib/tau5_web/(controllers|live|components)/.*(ex|heex)$"
    ]
  ]

config :tau5, dev_routes: true

# Public endpoint configuration for development
# This endpoint listens on all interfaces for remote access
config :tau5, Tau5Web.PublicEndpoint,
  http: [
    ip: {0, 0, 0, 0, 0, 0, 0, 0},  # Listen on all interfaces (IPv6 + IPv4 dual-stack)
    port: 7005
  ],
  server: true,
  check_origin: false,
  code_reloader: true,
  debug_errors: true,
  secret_key_base: "khmBQWSyT6UlgsLgWV5d+bu84avmmqGLaEI+8+Ykt6kl2+CMWKdJRVBpglGf63FO",
  watchers: [
    esbuild: {Esbuild, :install_and_run, [:default, ~w(--sourcemap=inline --watch)]},
    tailwind: {Tailwind, :install_and_run, [:default, ~w(--watch)]},
    monaco_esbuild: {Esbuild, :install_and_run, [:monaco_worker, ~w(--sourcemap=inline --watch)]}
  ],
  live_reload: [
    patterns: [
      ~r"priv/static/(?!uploads/).*(js|css|png|jpeg|jpg|gif|svg)$",
      ~r"priv/gettext/.*(po)$",
      ~r"lib/tau5_web/(controllers|live|components)/.*(ex|heex)$",
      ~r"lib/tau5_web/live/.*(ex|heex|sface)$",
      ~r"lib/tau5_web/widgets/.*(ex|heex|sface)$"
    ]
  ]

# Console allowed origins (optional - ports are dynamic now)
# config :tau5, console_allowed_origins: ["http://localhost:*"]

# Do not include metadata nor timestamps in development logs
config :logger, :console, format: "[$level] $message\n"

# Set a higher stacktrace during development. Avoid configuring such
# in production as building large stacktraces may be expensive.
config :phoenix, :stacktrace_depth, 20

# Initialize plugs at runtime for faster development compilation
config :phoenix, :plug_init_mode, :runtime

config :phoenix_live_view,
  # Include HEEx debug annotations as HTML comments in rendered markup
  debug_heex_annotations: true,
  # Enable helpful, but potentially expensive runtime checks
  enable_expensive_runtime_checks: true

# Disable swoosh api client as it is only required for production adapters.
config :swoosh, :api_client, false
